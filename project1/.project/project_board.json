{
  "sprints": {
    "Sprint 1": {
      "goal": "Design and implement a functional temperature converter core logic and user interface in converter.py.",
      "tasks": [
        {
          "assignee": "Coder",
          "task_description": "Define constants for supported units (Celsius, Fahrenheit, Kelvin) and implement a validation function to ensure input unit is valid. Simplifies future conversions and error handling.",
          "task_name": "Define unit constants and validate allowed units",
          "id": 1,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Write a function that takes a temperature value and its unit, and returns the converted value in a target unit. The function should handle conversions between Celsius, Fahrenheit, and Kelvin.",
          "task_name": "Implement convert(value, from_unit, to_unit) function",
          "id": 2,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Write code to prompt user for input, validate numeric value and check that the unit matches supported units. Handle invalid inputs gracefully with informative error messages.",
          "task_name": "Implement input parsing and validation for value and unit",
          "id": 3,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "After parsing and validating input, use the convert function to compute the other two units and display the results clearly to the user in the console.",
          "task_name": "Display converted values in a clear format",
          "id": 4,
          "done": false
        }
      ]
    },
    "Sprint 2": {
      "goal": "Write and refine code documentation for converter.py, making sure all functions and logic are clearly explained.",
      "tasks": [
        {
          "assignee": "Documenter",
          "task_description": "Write thorough documentation for the temperature converter code, including docstrings for all functions and general explanations about the program structure. Enhance code readability and testability.",
          "task_name": "Document all code and functions in converter.py",
          "id": 5,
          "done": false
        }
      ]
    }
  },
  "backlog": [],
  "metadata": {
    "num_tasks": 5
  }
}