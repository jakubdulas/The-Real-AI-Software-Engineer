{
  "sprints": {
    "Sprint 1": {
      "goal": "Develop the core functionality for a console-based temperature converter in a single Python file.",
      "tasks": [
        {
          "assignee": "Coder",
          "task_description": "Implement the temperature conversion logic and reusable function that takes a value, the source unit, and the target unit, and returns the converted value. Handle all combinations between Celsius, Fahrenheit, and Kelvin.",
          "task_name": "Design conversion logic and implement convert(value, from_unit, to_unit) function",
          "id": 1,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Implement logic to read numeric value and unit (Celsius, Fahrenheit, Kelvin) from the user via the terminal, with checks for invalid input and units. Provide appropriate error messages and let the user retry.",
          "task_name": "Create user input handling (numeric value and unit) with validation",
          "id": 2,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Combine the input handling and conversion logic. After obtaining a valid numeric value and unit, use the convert function to convert to the two remaining units and print the results in a clear, user-friendly format.",
          "task_name": "Integrate conversion logic with user interaction and display results",
          "id": 3,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Test the console application with various inputs (valid/invalid values and units, boundary cases like 0 Kelvin) to ensure correct conversion, input validation, and user interface output.",
          "task_name": "Test the complete converter workflow manually",
          "id": 4,
          "done": false
        }
      ]
    },
    "Sprint 2": {
      "goal": "Document the temperature converter and its code in a single file, providing usage explanation and function docstrings.",
      "tasks": [
        {
          "assignee": "Documenter",
          "task_description": "Add clear docstrings to all functions and modules in converter.py. Write instructions at the top of the file for usage and description.",
          "task_name": "Write code documentation and usage instructions in converter.py",
          "id": 5,
          "done": false
        }
      ]
    }
  },
  "backlog": [],
  "metadata": {
    "num_tasks": 5
  }
}