{
  "sprints": {
    "Sprint 1": {
      "goal": "Set up the backend for the TODO list app with RESTful endpoints and models.",
      "tasks": [
        {
          "assignee": "Coder",
          "task_description": "Initialize the backend project folder (backend/), set up a Python virtual environment, and prepare for the API implementation.",
          "task_name": "Set up backend project structure in backend/ directory",
          "id": 1,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Implement `GET /tasks`, `POST /tasks`, `PATCH /tasks/{id}`, and `DELETE /tasks/{id}` endpoints in the chosen framework (Flask, Django REST Framework, or FastAPI). Ensure correct request and response handling.",
          "task_name": "Create CRUD REST API endpoints for Task model",
          "id": 2,
          "done": false
        },
        {
          "assignee": "Researcher",
          "task_description": "Check how to enable CORS in the selected backend framework to allow the frontend (different origin) to make requests for local development.",
          "task_name": "Research simple CORS handling for backend API",
          "id": 3,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Create a Task model (suggested fields: id, title (string), status (boolean for done), due_date (optional, datetime)). Use a simple in-memory store or SQLite database for persistence.",
          "task_name": "Implement TODO model with title, status, and due date",
          "id": 4,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Implement CORS handling in the backend so the frontend (on different origin) can make requests. Use the results from research.",
          "task_name": "Add CORS support to backend API",
          "id": 5,
          "done": false
        }
      ]
    },
    "Sprint 2": {
      "goal": "Implement and connect the frontend UI to backend REST API, and provide documentation to run the project locally.",
      "tasks": [
        {
          "assignee": "Coder",
          "task_description": "Create the frontend/ directory, and add base HTML and JavaScript files.",
          "task_name": "Set up frontend project structure in frontend/ directory",
          "id": 6,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Add functionality to each listed task for deleting it (DELETE /tasks/{id}) using fetch to the backend REST API.",
          "task_name": "Implement task deletion in frontend",
          "id": 7,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Add some minimal styles in CSS to make the TODO app presentable (not fancy).",
          "task_name": "Add minimal CSS styling to frontend",
          "id": 8,
          "done": false
        },
        {
          "assignee": "Coder",
          "task_description": "Implement HTML and JavaScript to:\n- Display all tasks (GET /tasks)\n- Add a new task (POST /tasks)\n- Connect to the backend REST API using fetch.\n- Basic input field and button for adding tasks.",
          "task_name": "Implement task listing and addition in frontend",
          "id": 9,
          "done": false
        },
        {
          "assignee": "Documenter",
          "task_description": "Create a README file that explains how to:\n- Install and run the backend API\n- Start the frontend\n- Any environment setup (e.g., virtualenv, requirements.txt, ports, etc.)\n- Default URLs for frontend and backend",
          "task_name": "Write documentation for running the TODO app locally",
          "id": 10,
          "done": false
        },
        {
          "assignee": "Documenter",
          "task_description": "Document code in both backend and frontend directories for clarity. Add docstrings to backend code and code comments to key sections in frontend JavaScript and HTML as necessary.",
          "task_name": "Document backend and frontend code",
          "id": 11,
          "done": false
        }
      ]
    }
  },
  "backlog": [],
  "metadata": {
    "num_tasks": 11
  }
}